import { GetFailed, Result, AutocompleteOptions, AutocompleteSuccess, GetSuccess, AutocompleteFailed, FindSuccess, FindFailed, TypeaheadSuccess, TypeaheadFailed, TypeaheadOptions, LocationOptions, LocationSuccess, LocationFailed, GetLocationSuccess, GetLocationFailed } from './Types.js';
export declare class Client {
    readonly api_key: string;
    readonly autocomplete_url: string;
    readonly get_url: string;
    readonly location_url: string;
    readonly get_location_url: string;
    readonly typeahead_url: string;
    private autocompleteAbortController;
    private getAbortController;
    private typeaheadAbortController;
    private locationAbortController;
    private getLocationAbortController;
    private autocompleteResponse?;
    private getResponse?;
    private locationResponse?;
    private getLocationResponse?;
    private typeaheadResponse?;
    constructor(api_key: string, autocomplete_url?: string, get_url?: string, location_url?: string, get_location_url?: string, typeahead_url?: string);
    location(query: string, options?: Partial<LocationOptions>): Promise<Result<LocationSuccess, LocationFailed>>;
    getLocation(id: string): Promise<Result<GetLocationSuccess, GetLocationFailed>>;
    autocomplete(query: string, options?: Partial<AutocompleteOptions>): Promise<Result<AutocompleteSuccess, AutocompleteFailed>>;
    get(id: string, options?: Partial<AutocompleteOptions>): Promise<Result<GetSuccess, GetFailed>>;
    find(postcode: string): Promise<Result<FindSuccess, FindFailed>>;
    typeahead(term: string, options?: Partial<TypeaheadOptions>): Promise<Result<TypeaheadSuccess, TypeaheadFailed>>;
}
